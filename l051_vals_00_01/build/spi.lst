ARM GAS  /tmp/ccrVpoRX.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SPI2_Init,"ax",%progbits
  18              		.align	2
  19              		.global	MX_SPI2_Init
  20              		.code	16
  21              		.thumb_func
  23              	MX_SPI2_Init:
  24              	.LFB36:
  25              		.file 1 "Src/spi.c"
   1:Src/spi.c     **** /**
   2:Src/spi.c     ****   ******************************************************************************
   3:Src/spi.c     ****   * File Name          : SPI.c
   4:Src/spi.c     ****   * Description        : This file provides code for the configuration
   5:Src/spi.c     ****   *                      of the SPI instances.
   6:Src/spi.c     ****   ******************************************************************************
   7:Src/spi.c     ****   ** This notice applies to any and all portions of this file
   8:Src/spi.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/spi.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/spi.c     ****   * inserted by the user or by software development tools
  11:Src/spi.c     ****   * are owned by their respective copyright owners.
  12:Src/spi.c     ****   *
  13:Src/spi.c     ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/spi.c     ****   *
  15:Src/spi.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/spi.c     ****   * are permitted provided that the following conditions are met:
  17:Src/spi.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/spi.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/spi.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/spi.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/spi.c     ****   *      and/or other materials provided with the distribution.
  22:Src/spi.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/spi.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/spi.c     ****   *      without specific prior written permission.
  25:Src/spi.c     ****   *
  26:Src/spi.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/spi.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/spi.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/spi.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/spi.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/spi.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/spi.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/spi.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccrVpoRX.s 			page 2


  34:Src/spi.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/spi.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/spi.c     ****   *
  37:Src/spi.c     ****   ******************************************************************************
  38:Src/spi.c     ****   */
  39:Src/spi.c     **** 
  40:Src/spi.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/spi.c     **** #include "spi.h"
  42:Src/spi.c     **** 
  43:Src/spi.c     **** #include "gpio.h"
  44:Src/spi.c     **** 
  45:Src/spi.c     **** /* USER CODE BEGIN 0 */
  46:Src/spi.c     **** 
  47:Src/spi.c     **** /* USER CODE END 0 */
  48:Src/spi.c     **** 
  49:Src/spi.c     **** SPI_HandleTypeDef hspi2;
  50:Src/spi.c     **** 
  51:Src/spi.c     **** /* SPI2 init function */
  52:Src/spi.c     **** void MX_SPI2_Init(void)
  53:Src/spi.c     **** {
  26              		.loc 1 53 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  54:Src/spi.c     **** 
  55:Src/spi.c     ****   hspi2.Instance = SPI2;
  33              		.loc 1 55 0
  34 0002 0F48     		ldr	r0, .L3
  35 0004 0F4B     		ldr	r3, .L3+4
  36 0006 0360     		str	r3, [r0]
  56:Src/spi.c     ****   hspi2.Init.Mode = SPI_MODE_MASTER;
  37              		.loc 1 56 0
  38 0008 8223     		mov	r3, #130
  39 000a 5B00     		lsl	r3, r3, #1
  40 000c 4360     		str	r3, [r0, #4]
  57:Src/spi.c     ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
  41              		.loc 1 57 0
  42 000e 0023     		mov	r3, #0
  43 0010 8360     		str	r3, [r0, #8]
  58:Src/spi.c     ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
  44              		.loc 1 58 0
  45 0012 C360     		str	r3, [r0, #12]
  59:Src/spi.c     ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
  46              		.loc 1 59 0
  47 0014 0361     		str	r3, [r0, #16]
  60:Src/spi.c     ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
  48              		.loc 1 60 0
  49 0016 4361     		str	r3, [r0, #20]
  61:Src/spi.c     ****   hspi2.Init.NSS = SPI_NSS_SOFT;
  50              		.loc 1 61 0
  51 0018 8022     		mov	r2, #128
  52 001a 9200     		lsl	r2, r2, #2
  53 001c 8261     		str	r2, [r0, #24]
  62:Src/spi.c     ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
ARM GAS  /tmp/ccrVpoRX.s 			page 3


  54              		.loc 1 62 0
  55 001e E93A     		sub	r2, r2, #233
  56 0020 FF3A     		sub	r2, r2, #255
  57 0022 C261     		str	r2, [r0, #28]
  63:Src/spi.c     ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
  58              		.loc 1 63 0
  59 0024 0362     		str	r3, [r0, #32]
  64:Src/spi.c     ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
  60              		.loc 1 64 0
  61 0026 4362     		str	r3, [r0, #36]
  65:Src/spi.c     ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  62              		.loc 1 65 0
  63 0028 8362     		str	r3, [r0, #40]
  66:Src/spi.c     ****   hspi2.Init.CRCPolynomial = 7;
  64              		.loc 1 66 0
  65 002a 0733     		add	r3, r3, #7
  66 002c C362     		str	r3, [r0, #44]
  67:Src/spi.c     ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
  67              		.loc 1 67 0
  68 002e FFF7FEFF 		bl	HAL_SPI_Init
  69              	.LVL0:
  70 0032 0028     		cmp	r0, #0
  71 0034 03D0     		beq	.L1
  68:Src/spi.c     ****   {
  69:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
  72              		.loc 1 69 0
  73 0036 0448     		ldr	r0, .L3+8
  74 0038 4521     		mov	r1, #69
  75 003a FFF7FEFF 		bl	_Error_Handler
  76              	.LVL1:
  77              	.L1:
  70:Src/spi.c     ****   }
  71:Src/spi.c     **** 
  72:Src/spi.c     **** }
  78              		.loc 1 72 0
  79              		@ sp needed
  80 003e 08BD     		pop	{r3, pc}
  81              	.L4:
  82              		.align	2
  83              	.L3:
  84 0040 00000000 		.word	hspi2
  85 0044 00380040 		.word	1073756160
  86 0048 00000000 		.word	.LC1
  87              		.cfi_endproc
  88              	.LFE36:
  90              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
  91              		.align	2
  92              		.global	HAL_SPI_MspInit
  93              		.code	16
  94              		.thumb_func
  96              	HAL_SPI_MspInit:
  97              	.LFB37:
  73:Src/spi.c     **** 
  74:Src/spi.c     **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
  75:Src/spi.c     **** {
  98              		.loc 1 75 0
  99              		.cfi_startproc
ARM GAS  /tmp/ccrVpoRX.s 			page 4


 100              	.LVL2:
 101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 20
 104              		.cfi_offset 4, -20
 105              		.cfi_offset 5, -16
 106              		.cfi_offset 6, -12
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 87B0     		sub	sp, sp, #28
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 48
  76:Src/spi.c     **** 
  77:Src/spi.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
  78:Src/spi.c     ****   if(spiHandle->Instance==SPI2)
 112              		.loc 1 78 0
 113 0004 0268     		ldr	r2, [r0]
 114 0006 134B     		ldr	r3, .L7
 115 0008 9A42     		cmp	r2, r3
 116 000a 20D1     		bne	.L5
  79:Src/spi.c     ****   {
  80:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 0 */
  81:Src/spi.c     **** 
  82:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 0 */
  83:Src/spi.c     ****     /* SPI2 clock enable */
  84:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_ENABLE();
 117              		.loc 1 84 0
 118 000c 124A     		ldr	r2, .L7+4
 119 000e 936B     		ldr	r3, [r2, #56]
 120 0010 8021     		mov	r1, #128
 121 0012 C901     		lsl	r1, r1, #7
 122 0014 0B43     		orr	r3, r1
 123 0016 9363     		str	r3, [r2, #56]
  85:Src/spi.c     ****   
  86:Src/spi.c     ****     /**SPI2 GPIO Configuration    
  87:Src/spi.c     ****     PB10     ------> SPI2_SCK
  88:Src/spi.c     ****     PB14     ------> SPI2_MISO
  89:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
  90:Src/spi.c     ****     */
  91:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 124              		.loc 1 91 0
 125 0018 8023     		mov	r3, #128
 126 001a DB00     		lsl	r3, r3, #3
 127 001c 0193     		str	r3, [sp, #4]
  92:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 128              		.loc 1 92 0
 129 001e 0227     		mov	r7, #2
 130 0020 0297     		str	r7, [sp, #8]
  93:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 93 0
 132 0022 0024     		mov	r4, #0
 133 0024 0394     		str	r4, [sp, #12]
  94:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 134              		.loc 1 94 0
 135 0026 0326     		mov	r6, #3
 136 0028 0496     		str	r6, [sp, #16]
  95:Src/spi.c     ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
ARM GAS  /tmp/ccrVpoRX.s 			page 5


 137              		.loc 1 95 0
 138 002a 0523     		mov	r3, #5
 139 002c 0593     		str	r3, [sp, #20]
  96:Src/spi.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 140              		.loc 1 96 0
 141 002e 0B4D     		ldr	r5, .L7+8
 142 0030 281C     		mov	r0, r5
 143              	.LVL3:
 144 0032 01A9     		add	r1, sp, #4
 145 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL4:
  97:Src/spi.c     **** 
  98:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 147              		.loc 1 98 0
 148 0038 C023     		mov	r3, #192
 149 003a 1B02     		lsl	r3, r3, #8
 150 003c 0193     		str	r3, [sp, #4]
  99:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 151              		.loc 1 99 0
 152 003e 0297     		str	r7, [sp, #8]
 100:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 153              		.loc 1 100 0
 154 0040 0394     		str	r4, [sp, #12]
 101:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 155              		.loc 1 101 0
 156 0042 0496     		str	r6, [sp, #16]
 102:Src/spi.c     ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 157              		.loc 1 102 0
 158 0044 0594     		str	r4, [sp, #20]
 103:Src/spi.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 159              		.loc 1 103 0
 160 0046 281C     		mov	r0, r5
 161 0048 01A9     		add	r1, sp, #4
 162 004a FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL5:
 164              	.L5:
 104:Src/spi.c     **** 
 105:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 1 */
 106:Src/spi.c     **** 
 107:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 1 */
 108:Src/spi.c     ****   }
 109:Src/spi.c     **** }
 165              		.loc 1 109 0
 166 004e 07B0     		add	sp, sp, #28
 167              		@ sp needed
 168 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 169              	.L8:
 170 0052 C046     		.align	2
 171              	.L7:
 172 0054 00380040 		.word	1073756160
 173 0058 00100240 		.word	1073876992
 174 005c 00040050 		.word	1342178304
 175              		.cfi_endproc
 176              	.LFE37:
 178              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 179              		.align	2
 180              		.global	HAL_SPI_MspDeInit
ARM GAS  /tmp/ccrVpoRX.s 			page 6


 181              		.code	16
 182              		.thumb_func
 184              	HAL_SPI_MspDeInit:
 185              	.LFB38:
 110:Src/spi.c     **** 
 111:Src/spi.c     **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 112:Src/spi.c     **** {
 186              		.loc 1 112 0
 187              		.cfi_startproc
 188              	.LVL6:
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 113:Src/spi.c     **** 
 114:Src/spi.c     ****   if(spiHandle->Instance==SPI2)
 194              		.loc 1 114 0
 195 0002 0268     		ldr	r2, [r0]
 196 0004 064B     		ldr	r3, .L11
 197 0006 9A42     		cmp	r2, r3
 198 0008 09D1     		bne	.L9
 115:Src/spi.c     ****   {
 116:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspDeInit 0 */
 117:Src/spi.c     **** 
 118:Src/spi.c     ****   /* USER CODE END SPI2_MspDeInit 0 */
 119:Src/spi.c     ****     /* Peripheral clock disable */
 120:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_DISABLE();
 199              		.loc 1 120 0
 200 000a 064A     		ldr	r2, .L11+4
 201 000c 916B     		ldr	r1, [r2, #56]
 202 000e 064B     		ldr	r3, .L11+8
 203 0010 0B40     		and	r3, r1
 204 0012 9363     		str	r3, [r2, #56]
 121:Src/spi.c     ****   
 122:Src/spi.c     ****     /**SPI2 GPIO Configuration    
 123:Src/spi.c     ****     PB10     ------> SPI2_SCK
 124:Src/spi.c     ****     PB14     ------> SPI2_MISO
 125:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
 126:Src/spi.c     ****     */
 127:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10|GPIO_PIN_14|GPIO_PIN_15);
 205              		.loc 1 127 0
 206 0014 0548     		ldr	r0, .L11+12
 207              	.LVL7:
 208 0016 C421     		mov	r1, #196
 209 0018 0902     		lsl	r1, r1, #8
 210 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 211              	.LVL8:
 212              	.L9:
 128:Src/spi.c     **** 
 129:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspDeInit 1 */
 130:Src/spi.c     **** 
 131:Src/spi.c     ****   /* USER CODE END SPI2_MspDeInit 1 */
 132:Src/spi.c     ****   }
 133:Src/spi.c     **** } 
 213              		.loc 1 133 0
 214              		@ sp needed
ARM GAS  /tmp/ccrVpoRX.s 			page 7


 215 001e 08BD     		pop	{r3, pc}
 216              	.L12:
 217              		.align	2
 218              	.L11:
 219 0020 00380040 		.word	1073756160
 220 0024 00100240 		.word	1073876992
 221 0028 FFBFFFFF 		.word	-16385
 222 002c 00040050 		.word	1342178304
 223              		.cfi_endproc
 224              	.LFE38:
 226              		.comm	hspi2,88,4
 227              		.section	.rodata.str1.4,"aMS",%progbits,1
 228              		.align	2
 229              	.LC1:
 230 0000 5372632F 		.ascii	"Src/spi.c\000"
 230      7370692E 
 230      6300
 231              		.text
 232              	.Letext0:
 233              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 234              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 235              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 236              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 237              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 238              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 239              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 240              		.file 9 "Inc/spi.h"
ARM GAS  /tmp/ccrVpoRX.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/ccrVpoRX.s:18     .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccrVpoRX.s:23     .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccrVpoRX.s:84     .text.MX_SPI2_Init:0000000000000040 $d
                            *COM*:0000000000000058 hspi2
     /tmp/ccrVpoRX.s:91     .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccrVpoRX.s:96     .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccrVpoRX.s:172    .text.HAL_SPI_MspInit:0000000000000054 $d
     /tmp/ccrVpoRX.s:179    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccrVpoRX.s:184    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccrVpoRX.s:219    .text.HAL_SPI_MspDeInit:0000000000000020 $d
     /tmp/ccrVpoRX.s:228    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
