ARM GAS  /tmp/ccJwcIby.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	2
  19              		.global	_Error_Handler
  20              		.code	16
  21              		.thumb_func
  23              	_Error_Handler:
  24              	.LFB38:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccJwcIby.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32l0xx_hal.h"
  42:Src/main.c    **** #include "adc.h"
  43:Src/main.c    **** #include "i2c.h"
  44:Src/main.c    **** #include "spi.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** #include "ssd1306.h"
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** int DELAY_1_MS = 50;
  56:Src/main.c    **** int NUMBER_OF_CHARGE_PULSES = 8;
  57:Src/main.c    **** int DELAY_LENGTH = 11;
  58:Src/main.c    **** int CHOCK_LENGTH = 10;
  59:Src/main.c    **** int DISCARGE_IMPULSE_LENGTH = 11;
  60:Src/main.c    **** 
  61:Src/main.c    **** int usec_timer_flag = 0;
  62:Src/main.c    **** 
  63:Src/main.c    **** int automat_state = 0;
  64:Src/main.c    **** int odd_even = 0;
  65:Src/main.c    **** 
  66:Src/main.c    **** int charge_packet_counter = 0;
  67:Src/main.c    **** int positive_impulse_counter = 0;
  68:Src/main.c    **** int negative_impulse_counter = 0;
  69:Src/main.c    **** int discharge_counter = 0;
  70:Src/main.c    **** 
  71:Src/main.c    **** uint32_t delay_counter = 0;
  72:Src/main.c    **** uint32_t chock_length_counter = 0;
  73:Src/main.c    **** 
  74:Src/main.c    **** int usart_rxne_flag = 0;
  75:Src/main.c    **** int usart_string_received_flag = 0;
  76:Src/main.c    **** 
  77:Src/main.c    **** char message[64];
  78:Src/main.c    **** 
  79:Src/main.c    **** char usart_buffer[256];
  80:Src/main.c    **** int usart_buffer_index = 0;
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** 
  85:Src/main.c    **** void usec_timer_action();                                                                          
  86:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    **** 
  89:Src/main.c    **** int main(void)
  90:Src/main.c    **** {
ARM GAS  /tmp/ccJwcIby.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    **** 
  93:Src/main.c    **** 	/* MCU Configuration----------------------------------------------------------*/ 
  94:Src/main.c    ****                                                                                     
  95:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****     HAL_Init();
  97:Src/main.c    ****                                                                                     
  98:Src/main.c    ****                                                                                     
  99:Src/main.c    ****     /* Configure the system clock */
 100:Src/main.c    ****     SystemClock_Config();
 101:Src/main.c    ****                                                                                     
 102:Src/main.c    ****                                                                                     
 103:Src/main.c    ****     /* Initialize all configured peripherals */
 104:Src/main.c    ****     MX_GPIO_Init();
 105:Src/main.c    ****     MX_TIM2_Init();
 106:Src/main.c    ****     MX_TIM6_Init();
 107:Src/main.c    ****     MX_TIM22_Init();
 108:Src/main.c    ****     MX_SPI2_Init();
 109:Src/main.c    ****     MX_USART1_UART_Init();
 110:Src/main.c    ****     MX_I2C1_Init();
 111:Src/main.c    ****     MX_ADC_Init();
 112:Src/main.c    ****                                                                                     
 113:Src/main.c    ****     ssd1306_set_i2c_port(&hi2c1, 1);
 114:Src/main.c    ****   	ssd1306_Init();
 115:Src/main.c    ****   	HAL_Delay(100);
 116:Src/main.c    **** 
 117:Src/main.c    ****   	ssd1306_Fill(White);
 118:Src/main.c    ****   	ssd1306_UpdateScreen();
 119:Src/main.c    ****   	HAL_Delay(100);
 120:Src/main.c    ****   	ssd1306_Fill(Black);
 121:Src/main.c    ****   	ssd1306_UpdateScreen();
 122:Src/main.c    ****   	HAL_Delay(100);
 123:Src/main.c    **** 
 124:Src/main.c    ****   	ssd1306_SetCursor(0,0);
 125:Src/main.c    ****   	ssd1306_WriteString("VALS", Font_16x26, White);
 126:Src/main.c    ****   	//ssd1306_SetCursor(0,30);
 127:Src/main.c    ****   	//ssd1306_WriteString("Start..", Font_16x26, White);
 128:Src/main.c    ****   	ssd1306_UpdateScreen();
 129:Src/main.c    ****   	HAL_Delay(100);
 130:Src/main.c    **** 
 131:Src/main.c    **** 
 132:Src/main.c    **** 
 133:Src/main.c    **** 	
 134:Src/main.c    ****   	HAL_GPIO_WritePin(led_out_GPIO_Port, led_out_Pin, GPIO_PIN_RESET);// turn led on
 135:Src/main.c    **** 
 136:Src/main.c    **** 	/* Disable SysTick Interrupt */
 137:Src/main.c    **** 	SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 138:Src/main.c    **** 
 139:Src/main.c    ****     MX_TIM21_Init();
 140:Src/main.c    **** 	HAL_TIM_Base_Start(&htim21);
 141:Src/main.c    ****     TIM21->DIER |= TIM_DIER_UIE;
 142:Src/main.c    **** 
 143:Src/main.c    **** 	sprintf(message, "t");
 144:Src/main.c    **** 
 145:Src/main.c    **** 	automat_state = 1;
 146:Src/main.c    ****     /* Infinite loop */
 147:Src/main.c    ****     while (1)
ARM GAS  /tmp/ccJwcIby.s 			page 4


 148:Src/main.c    ****     {
 149:Src/main.c    **** 		// Disable SysTick Interrupt 
 150:Src/main.c    **** 		//SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 151:Src/main.c    **** 		// enable tim21 interrupt
 152:Src/main.c    ****     	//TIM21->DIER |= TIM_DIER_UIE;
 153:Src/main.c    **** 
 154:Src/main.c    **** 		//while(automat_state != 0);
 155:Src/main.c    **** 
 156:Src/main.c    **** 		// disable tim21 interrupt
 157:Src/main.c    ****     	//TIM21->DIER &= ~TIM_DIER_UIE;
 158:Src/main.c    **** 		// Enable SysTick Interrupt
 159:Src/main.c    **** 		//SysTick->CTRL = SysTick_CTRL_TICKINT_Msk;
 160:Src/main.c    ****   		//HAL_Delay(11);
 161:Src/main.c    **** 		//automat_state = 1;
 162:Src/main.c    **** 
 163:Src/main.c    **** 		// toggle gpio
 164:Src/main.c    ****   		//usec_gen_out_GPIO_Port->ODR ^= usec_gen_out_Pin;// toggle usec generator pin
 165:Src/main.c    **** 
 166:Src/main.c    ****     	//USART1->CR1 |= USART_CR1_RXNEIE;
 167:Src/main.c    ****     	//USART1->CR1 &= ~USART_CR1_RXNEIE;
 168:Src/main.c    **** 
 169:Src/main.c    **** 		//while(((USART1->ISR) & UART_FLAG_RXNE) == RESET);
 170:Src/main.c    **** 		//HAL_UART_Transmit(&huart1, message, strlen((const char *)message), 500);
 171:Src/main.c    **** 		//*
 172:Src/main.c    **** 		//if(automat_state == 0)
 173:Src/main.c    **** 		//if(usart_rxne_flag)
 174:Src/main.c    **** 
 175:Src/main.c    **** 
 176:Src/main.c    **** 		if(usart_string_received_flag)
 177:Src/main.c    **** 		{
 178:Src/main.c    **** 			int on_off_flag = 0;
 179:Src/main.c    **** 			int channel = 1;
 180:Src/main.c    **** 			int aux;
 181:Src/main.c    **** 
 182:Src/main.c    **** 			sscanf(usart_buffer, "e%1dc%2dk%3dl%4dd%2dn%4dp%5dm%3d\r\n",
 183:Src/main.c    **** 			       &on_off_flag, &channel, &NUMBER_OF_CHARGE_PULSES, &DISCARGE_IMPULSE_LENGTH,
 184:Src/main.c    **** 				   &DELAY_LENGTH, &CHOCK_LENGTH, &aux, &aux);
 185:Src/main.c    **** 			DISCARGE_IMPULSE_LENGTH = DISCARGE_IMPULSE_LENGTH/20 + 1;
 186:Src/main.c    **** 			usart_string_received_flag = 0;
 187:Src/main.c    **** 			usart_buffer_index = 0;
 188:Src/main.c    **** 
 189:Src/main.c    **** 			if(on_off_flag)
 190:Src/main.c    **** 			{
 191:Src/main.c    **** 				// start generator
 192:Src/main.c    ****     			MX_TIM21_Init();
 193:Src/main.c    **** 				HAL_TIM_Base_Start(&htim21);
 194:Src/main.c    **** 
 195:Src/main.c    **** 				automat_state = 1;
 196:Src/main.c    **** 				chock_length_counter = 0;
 197:Src/main.c    **** 				// enable tim21 interrupt
 198:Src/main.c    ****     			TIM21->DIER |= TIM_DIER_UIE;
 199:Src/main.c    **** 			}
 200:Src/main.c    **** 		}
 201:Src/main.c    **** 
 202:Src/main.c    **** 
 203:Src/main.c    **** 
 204:Src/main.c    ****     }
ARM GAS  /tmp/ccJwcIby.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    **** }
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****   * @brief System Clock Configuration
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** void SystemClock_Config(void)
 213:Src/main.c    **** {
 214:Src/main.c    **** 
 215:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 216:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 217:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 218:Src/main.c    **** 
 219:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 220:Src/main.c    ****     */
 221:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 222:Src/main.c    **** 
 223:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 224:Src/main.c    ****     */
 225:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 226:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 227:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 232:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 235:Src/main.c    ****   }
 236:Src/main.c    **** 
 237:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 238:Src/main.c    ****     */
 239:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 240:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 241:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 242:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 243:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 244:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 245:Src/main.c    **** 
 246:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 249:Src/main.c    ****   }
 250:Src/main.c    **** 
 251:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 252:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 253:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 254:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 255:Src/main.c    ****   {
 256:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 257:Src/main.c    ****   }
 258:Src/main.c    **** 
 259:Src/main.c    ****     /**Configure the Systick interrupt time 
 260:Src/main.c    ****     */
 261:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
ARM GAS  /tmp/ccJwcIby.s 			page 6


 262:Src/main.c    **** 
 263:Src/main.c    ****     /**Configure the Systick 
 264:Src/main.c    ****     */
 265:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 268:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 269:Src/main.c    **** }
 270:Src/main.c    **** 
 271:Src/main.c    **** 
 272:Src/main.c    **** /**
 273:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 274:Src/main.c    ****   * @param  file: The file name as string.
 275:Src/main.c    ****   * @param  line: The line in file as a number.
 276:Src/main.c    ****   * @retval None
 277:Src/main.c    ****   */
 278:Src/main.c    **** void _Error_Handler(char *file, int line)
 279:Src/main.c    **** {
  26              		.loc 1 279 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
 280:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 281:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 282:Src/main.c    ****   while(1)
 283:Src/main.c    ****   {
 284:Src/main.c    ****   }
  30              		.loc 1 284 0 discriminator 1
  31 0000 FEE7     		b	.L2
  32              		.cfi_endproc
  33              	.LFE38:
  35              		.global	__aeabi_uidiv
  36 0002 C046     		.section	.text.SystemClock_Config,"ax",%progbits
  37              		.align	2
  38              		.global	SystemClock_Config
  39              		.code	16
  40              		.thumb_func
  42              	SystemClock_Config:
  43              	.LFB37:
 213:Src/main.c    **** 
  44              		.loc 1 213 0
  45              		.cfi_startproc
  46 0000 00B5     		push	{lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 14, -4
  50 0002 9BB0     		sub	sp, sp, #108
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 112
 221:Src/main.c    **** 
  53              		.loc 1 221 0
  54 0004 294A     		ldr	r2, .L7
  55 0006 1168     		ldr	r1, [r2]
  56 0008 294B     		ldr	r3, .L7+4
  57 000a 0B40     		and	r3, r1
  58 000c 8021     		mov	r1, #128
  59 000e 0901     		lsl	r1, r1, #4
ARM GAS  /tmp/ccJwcIby.s 			page 7


  60 0010 0B43     		orr	r3, r1
  61 0012 1360     		str	r3, [r2]
 225:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 225 0
  63 0014 0223     		mov	r3, #2
  64 0016 0D93     		str	r3, [sp, #52]
 226:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 226 0
  66 0018 0122     		mov	r2, #1
  67 001a 1092     		str	r2, [sp, #64]
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  68              		.loc 1 227 0
  69 001c 0F32     		add	r2, r2, #15
  70 001e 1192     		str	r2, [sp, #68]
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  71              		.loc 1 228 0
  72 0020 1693     		str	r3, [sp, #88]
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
  73              		.loc 1 229 0
  74 0022 0023     		mov	r3, #0
  75 0024 1793     		str	r3, [sp, #92]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
  76              		.loc 1 230 0
  77 0026 8023     		mov	r3, #128
  78 0028 DB02     		lsl	r3, r3, #11
  79 002a 1893     		str	r3, [sp, #96]
 231:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  80              		.loc 1 231 0
  81 002c 8023     		mov	r3, #128
  82 002e DB03     		lsl	r3, r3, #15
  83 0030 1993     		str	r3, [sp, #100]
 232:Src/main.c    ****   {
  84              		.loc 1 232 0
  85 0032 0DA8     		add	r0, sp, #52
  86 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
  87              	.LVL1:
  88 0038 0028     		cmp	r0, #0
  89 003a 03D0     		beq	.L4
 234:Src/main.c    ****   }
  90              		.loc 1 234 0
  91 003c 1D48     		ldr	r0, .L7+8
  92 003e EA21     		mov	r1, #234
  93 0040 FFF7FEFF 		bl	_Error_Handler
  94              	.LVL2:
  95              	.L4:
 239:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  96              		.loc 1 239 0
  97 0044 0F23     		mov	r3, #15
  98 0046 0893     		str	r3, [sp, #32]
 241:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  99              		.loc 1 241 0
 100 0048 0C3B     		sub	r3, r3, #12
 101 004a 0993     		str	r3, [sp, #36]
 242:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 242 0
 103 004c 0023     		mov	r3, #0
 104 004e 0A93     		str	r3, [sp, #40]
ARM GAS  /tmp/ccJwcIby.s 			page 8


 243:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 105              		.loc 1 243 0
 106 0050 0B93     		str	r3, [sp, #44]
 244:Src/main.c    **** 
 107              		.loc 1 244 0
 108 0052 0C93     		str	r3, [sp, #48]
 246:Src/main.c    ****   {
 109              		.loc 1 246 0
 110 0054 08A8     		add	r0, sp, #32
 111 0056 0121     		mov	r1, #1
 112 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 113              	.LVL3:
 114 005c 0028     		cmp	r0, #0
 115 005e 03D0     		beq	.L5
 248:Src/main.c    ****   }
 116              		.loc 1 248 0
 117 0060 1448     		ldr	r0, .L7+8
 118 0062 F821     		mov	r1, #248
 119 0064 FFF7FEFF 		bl	_Error_Handler
 120              	.LVL4:
 121              	.L5:
 251:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 122              		.loc 1 251 0
 123 0068 0923     		mov	r3, #9
 124 006a 0193     		str	r3, [sp, #4]
 252:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 125              		.loc 1 252 0
 126 006c 0023     		mov	r3, #0
 127 006e 0393     		str	r3, [sp, #12]
 253:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 128              		.loc 1 253 0
 129 0070 0693     		str	r3, [sp, #24]
 254:Src/main.c    ****   {
 130              		.loc 1 254 0
 131 0072 01A8     		add	r0, sp, #4
 132 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 133              	.LVL5:
 134 0078 0028     		cmp	r0, #0
 135 007a 04D0     		beq	.L6
 256:Src/main.c    ****   }
 136              		.loc 1 256 0
 137 007c 0D48     		ldr	r0, .L7+8
 138 007e 8021     		mov	r1, #128
 139 0080 4900     		lsl	r1, r1, #1
 140 0082 FFF7FEFF 		bl	_Error_Handler
 141              	.LVL6:
 142              	.L6:
 261:Src/main.c    **** 
 143              		.loc 1 261 0
 144 0086 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 145              	.LVL7:
 146 008a FA21     		mov	r1, #250
 147 008c 8900     		lsl	r1, r1, #2
 148 008e FFF7FEFF 		bl	__aeabi_uidiv
 149              	.LVL8:
 150 0092 FFF7FEFF 		bl	HAL_SYSTICK_Config
 151              	.LVL9:
ARM GAS  /tmp/ccJwcIby.s 			page 9


 265:Src/main.c    **** 
 152              		.loc 1 265 0
 153 0096 0420     		mov	r0, #4
 154 0098 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 155              	.LVL10:
 268:Src/main.c    **** }
 156              		.loc 1 268 0
 157 009c 0120     		mov	r0, #1
 158 009e 4042     		neg	r0, r0
 159 00a0 0021     		mov	r1, #0
 160 00a2 0022     		mov	r2, #0
 161 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 162              	.LVL11:
 269:Src/main.c    **** 
 163              		.loc 1 269 0
 164 00a8 1BB0     		add	sp, sp, #108
 165              		@ sp needed
 166 00aa 00BD     		pop	{pc}
 167              	.L8:
 168              		.align	2
 169              	.L7:
 170 00ac 00700040 		.word	1073770496
 171 00b0 FFE7FFFF 		.word	-6145
 172 00b4 00000000 		.word	.LC0
 173              		.cfi_endproc
 174              	.LFE37:
 176              		.global	__aeabi_idiv
 177              		.section	.text.main,"ax",%progbits
 178              		.align	2
 179              		.global	main
 180              		.code	16
 181              		.thumb_func
 183              	main:
 184              	.LFB36:
  90:Src/main.c    **** 
 185              		.loc 1 90 0
 186              		.cfi_startproc
 187 0000 30B5     		push	{r4, r5, lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 12
 190              		.cfi_offset 4, -12
 191              		.cfi_offset 5, -8
 192              		.cfi_offset 14, -4
 193 0002 8BB0     		sub	sp, sp, #44
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 56
  96:Src/main.c    ****                                                                                     
 196              		.loc 1 96 0
 197 0004 FFF7FEFF 		bl	HAL_Init
 198              	.LVL12:
 100:Src/main.c    ****                                                                                     
 199              		.loc 1 100 0
 200 0008 FFF7FEFF 		bl	SystemClock_Config
 201              	.LVL13:
 104:Src/main.c    ****     MX_TIM2_Init();
 202              		.loc 1 104 0
 203 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccJwcIby.s 			page 10


 204              	.LVL14:
 105:Src/main.c    ****     MX_TIM6_Init();
 205              		.loc 1 105 0
 206 0010 FFF7FEFF 		bl	MX_TIM2_Init
 207              	.LVL15:
 106:Src/main.c    ****     MX_TIM22_Init();
 208              		.loc 1 106 0
 209 0014 FFF7FEFF 		bl	MX_TIM6_Init
 210              	.LVL16:
 107:Src/main.c    ****     MX_SPI2_Init();
 211              		.loc 1 107 0
 212 0018 FFF7FEFF 		bl	MX_TIM22_Init
 213              	.LVL17:
 108:Src/main.c    ****     MX_USART1_UART_Init();
 214              		.loc 1 108 0
 215 001c FFF7FEFF 		bl	MX_SPI2_Init
 216              	.LVL18:
 109:Src/main.c    ****     MX_I2C1_Init();
 217              		.loc 1 109 0
 218 0020 FFF7FEFF 		bl	MX_USART1_UART_Init
 219              	.LVL19:
 110:Src/main.c    ****     MX_ADC_Init();
 220              		.loc 1 110 0
 221 0024 FFF7FEFF 		bl	MX_I2C1_Init
 222              	.LVL20:
 111:Src/main.c    ****                                                                                     
 223              		.loc 1 111 0
 224 0028 FFF7FEFF 		bl	MX_ADC_Init
 225              	.LVL21:
 113:Src/main.c    ****   	ssd1306_Init();
 226              		.loc 1 113 0
 227 002c 3C48     		ldr	r0, .L13
 228 002e 0121     		mov	r1, #1
 229 0030 FFF7FEFF 		bl	ssd1306_set_i2c_port
 230              	.LVL22:
 114:Src/main.c    ****   	HAL_Delay(100);
 231              		.loc 1 114 0
 232 0034 FFF7FEFF 		bl	ssd1306_Init
 233              	.LVL23:
 115:Src/main.c    **** 
 234              		.loc 1 115 0
 235 0038 6420     		mov	r0, #100
 236 003a FFF7FEFF 		bl	HAL_Delay
 237              	.LVL24:
 117:Src/main.c    ****   	ssd1306_UpdateScreen();
 238              		.loc 1 117 0
 239 003e 0120     		mov	r0, #1
 240 0040 FFF7FEFF 		bl	ssd1306_Fill
 241              	.LVL25:
 118:Src/main.c    ****   	HAL_Delay(100);
 242              		.loc 1 118 0
 243 0044 FFF7FEFF 		bl	ssd1306_UpdateScreen
 244              	.LVL26:
 119:Src/main.c    ****   	ssd1306_Fill(Black);
 245              		.loc 1 119 0
 246 0048 6420     		mov	r0, #100
 247 004a FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccJwcIby.s 			page 11


 248              	.LVL27:
 120:Src/main.c    ****   	ssd1306_UpdateScreen();
 249              		.loc 1 120 0
 250 004e 0020     		mov	r0, #0
 251 0050 FFF7FEFF 		bl	ssd1306_Fill
 252              	.LVL28:
 121:Src/main.c    ****   	HAL_Delay(100);
 253              		.loc 1 121 0
 254 0054 FFF7FEFF 		bl	ssd1306_UpdateScreen
 255              	.LVL29:
 122:Src/main.c    **** 
 256              		.loc 1 122 0
 257 0058 6420     		mov	r0, #100
 258 005a FFF7FEFF 		bl	HAL_Delay
 259              	.LVL30:
 124:Src/main.c    ****   	ssd1306_WriteString("VALS", Font_16x26, White);
 260              		.loc 1 124 0
 261 005e 0020     		mov	r0, #0
 262 0060 0021     		mov	r1, #0
 263 0062 FFF7FEFF 		bl	ssd1306_SetCursor
 264              	.LVL31:
 125:Src/main.c    ****   	//ssd1306_SetCursor(0,30);
 265              		.loc 1 125 0
 266 0066 2F4B     		ldr	r3, .L13+4
 267 0068 2F48     		ldr	r0, .L13+8
 268 006a 1968     		ldr	r1, [r3]
 269 006c 5A68     		ldr	r2, [r3, #4]
 270 006e 0123     		mov	r3, #1
 271 0070 FFF7FEFF 		bl	ssd1306_WriteString
 272              	.LVL32:
 128:Src/main.c    ****   	HAL_Delay(100);
 273              		.loc 1 128 0
 274 0074 FFF7FEFF 		bl	ssd1306_UpdateScreen
 275              	.LVL33:
 129:Src/main.c    **** 
 276              		.loc 1 129 0
 277 0078 6420     		mov	r0, #100
 278 007a FFF7FEFF 		bl	HAL_Delay
 279              	.LVL34:
 134:Src/main.c    **** 
 280              		.loc 1 134 0
 281 007e 2B48     		ldr	r0, .L13+12
 282 0080 1021     		mov	r1, #16
 283 0082 0022     		mov	r2, #0
 284 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL35:
 137:Src/main.c    **** 
 286              		.loc 1 137 0
 287 0088 294A     		ldr	r2, .L13+16
 288 008a 1368     		ldr	r3, [r2]
 289 008c 0221     		mov	r1, #2
 290 008e 8B43     		bic	r3, r1
 291 0090 1360     		str	r3, [r2]
 139:Src/main.c    **** 	HAL_TIM_Base_Start(&htim21);
 292              		.loc 1 139 0
 293 0092 FFF7FEFF 		bl	MX_TIM21_Init
 294              	.LVL36:
ARM GAS  /tmp/ccJwcIby.s 			page 12


 140:Src/main.c    ****     TIM21->DIER |= TIM_DIER_UIE;
 295              		.loc 1 140 0
 296 0096 2748     		ldr	r0, .L13+20
 297 0098 FFF7FEFF 		bl	HAL_TIM_Base_Start
 298              	.LVL37:
 141:Src/main.c    **** 
 299              		.loc 1 141 0
 300 009c 264A     		ldr	r2, .L13+24
 301 009e D368     		ldr	r3, [r2, #12]
 302 00a0 0124     		mov	r4, #1
 303 00a2 2343     		orr	r3, r4
 304 00a4 D360     		str	r3, [r2, #12]
 143:Src/main.c    **** 
 305              		.loc 1 143 0
 306 00a6 2548     		ldr	r0, .L13+28
 307 00a8 2549     		ldr	r1, .L13+32
 308 00aa 0222     		mov	r2, #2
 309 00ac FFF7FEFF 		bl	memcpy
 310              	.LVL38:
 145:Src/main.c    ****     /* Infinite loop */
 311              		.loc 1 145 0
 312 00b0 244B     		ldr	r3, .L13+36
 313 00b2 1C60     		str	r4, [r3]
 314              	.L10:
 176:Src/main.c    **** 		{
 315              		.loc 1 176 0
 316 00b4 244B     		ldr	r3, .L13+40
 317 00b6 1B68     		ldr	r3, [r3]
 318 00b8 002B     		cmp	r3, #0
 319 00ba FBD0     		beq	.L10
 320              	.LBB2:
 178:Src/main.c    **** 			int channel = 1;
 321              		.loc 1 178 0
 322 00bc 0024     		mov	r4, #0
 323 00be 0794     		str	r4, [sp, #28]
 179:Src/main.c    **** 			int aux;
 324              		.loc 1 179 0
 325 00c0 0123     		mov	r3, #1
 326 00c2 0893     		str	r3, [sp, #32]
 182:Src/main.c    **** 			       &on_off_flag, &channel, &NUMBER_OF_CHARGE_PULSES, &DISCARGE_IMPULSE_LENGTH,
 327              		.loc 1 182 0
 328 00c4 214B     		ldr	r3, .L13+44
 329 00c6 0093     		str	r3, [sp]
 330 00c8 214D     		ldr	r5, .L13+48
 331 00ca 0195     		str	r5, [sp, #4]
 332 00cc 214B     		ldr	r3, .L13+52
 333 00ce 0293     		str	r3, [sp, #8]
 334 00d0 214B     		ldr	r3, .L13+56
 335 00d2 0393     		str	r3, [sp, #12]
 336 00d4 09AB     		add	r3, sp, #36
 337 00d6 0493     		str	r3, [sp, #16]
 338 00d8 0593     		str	r3, [sp, #20]
 339 00da 2048     		ldr	r0, .L13+60
 340 00dc 2049     		ldr	r1, .L13+64
 341 00de 07AA     		add	r2, sp, #28
 342 00e0 08AB     		add	r3, sp, #32
 343 00e2 FFF7FEFF 		bl	sscanf
ARM GAS  /tmp/ccJwcIby.s 			page 13


 344              	.LVL39:
 185:Src/main.c    **** 			usart_string_received_flag = 0;
 345              		.loc 1 185 0
 346 00e6 2868     		ldr	r0, [r5]
 347 00e8 1421     		mov	r1, #20
 348 00ea FFF7FEFF 		bl	__aeabi_idiv
 349              	.LVL40:
 350 00ee 0130     		add	r0, r0, #1
 351 00f0 2860     		str	r0, [r5]
 186:Src/main.c    **** 			usart_buffer_index = 0;
 352              		.loc 1 186 0
 353 00f2 154B     		ldr	r3, .L13+40
 354 00f4 1C60     		str	r4, [r3]
 187:Src/main.c    **** 
 355              		.loc 1 187 0
 356 00f6 1B4B     		ldr	r3, .L13+68
 357 00f8 1C60     		str	r4, [r3]
 189:Src/main.c    **** 			{
 358              		.loc 1 189 0
 359 00fa 079B     		ldr	r3, [sp, #28]
 360 00fc 002B     		cmp	r3, #0
 361 00fe D9D0     		beq	.L10
 192:Src/main.c    **** 				HAL_TIM_Base_Start(&htim21);
 362              		.loc 1 192 0
 363 0100 FFF7FEFF 		bl	MX_TIM21_Init
 364              	.LVL41:
 193:Src/main.c    **** 
 365              		.loc 1 193 0
 366 0104 0B48     		ldr	r0, .L13+20
 367 0106 FFF7FEFF 		bl	HAL_TIM_Base_Start
 368              	.LVL42:
 195:Src/main.c    **** 				chock_length_counter = 0;
 369              		.loc 1 195 0
 370 010a 0123     		mov	r3, #1
 371 010c 0D4A     		ldr	r2, .L13+36
 372 010e 1360     		str	r3, [r2]
 196:Src/main.c    **** 				// enable tim21 interrupt
 373              		.loc 1 196 0
 374 0110 0021     		mov	r1, #0
 375 0112 154A     		ldr	r2, .L13+72
 376 0114 1160     		str	r1, [r2]
 198:Src/main.c    **** 			}
 377              		.loc 1 198 0
 378 0116 084A     		ldr	r2, .L13+24
 379 0118 D168     		ldr	r1, [r2, #12]
 380 011a 0B43     		orr	r3, r1
 381 011c D360     		str	r3, [r2, #12]
 382 011e C9E7     		b	.L10
 383              	.L14:
 384              		.align	2
 385              	.L13:
 386 0120 00000000 		.word	hi2c1
 387 0124 00000000 		.word	Font_16x26
 388 0128 0C000000 		.word	.LC3
 389 012c 00040050 		.word	1342178304
 390 0130 10E000E0 		.word	-536813552
 391 0134 00000000 		.word	htim21
ARM GAS  /tmp/ccJwcIby.s 			page 14


 392 0138 00080140 		.word	1073809408
 393 013c 00000000 		.word	message
 394 0140 14000000 		.word	.LC8
 395 0144 00000000 		.word	.LANCHOR0
 396 0148 00000000 		.word	.LANCHOR1
 397 014c 00000000 		.word	.LANCHOR2
 398 0150 00000000 		.word	.LANCHOR3
 399 0154 00000000 		.word	.LANCHOR4
 400 0158 00000000 		.word	.LANCHOR5
 401 015c 00000000 		.word	usart_buffer
 402 0160 18000000 		.word	.LC13
 403 0164 00000000 		.word	.LANCHOR6
 404 0168 00000000 		.word	.LANCHOR7
 405              	.LBE2:
 406              		.cfi_endproc
 407              	.LFE36:
 409              		.section	.text.usec_timer_action,"ax",%progbits
 410              		.align	2
 411              		.global	usec_timer_action
 412              		.code	16
 413              		.thumb_func
 415              	usec_timer_action:
 416              	.LFB39:
 285:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 286:Src/main.c    **** }
 287:Src/main.c    **** 
 288:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 289:Src/main.c    **** /**
 290:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 291:Src/main.c    ****   *         where the assert_param error has occurred.
 292:Src/main.c    ****   * @param  file: pointer to the source file name
 293:Src/main.c    ****   * @param  line: assert_param error line source number
 294:Src/main.c    ****   * @retval None
 295:Src/main.c    ****   */
 296:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 297:Src/main.c    **** { 
 298:Src/main.c    ****   /* USER CODE BEGIN 6 */
 299:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 300:Src/main.c    ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 301:Src/main.c    ****   /* USER CODE END 6 */
 302:Src/main.c    **** }
 303:Src/main.c    **** #endif /* USE_FULL_ASSERT */
 304:Src/main.c    **** 
 305:Src/main.c    **** /**
 306:Src/main.c    ****   * @}
 307:Src/main.c    ****   */
 308:Src/main.c    **** 
 309:Src/main.c    **** /**
 310:Src/main.c    ****   * @}
 311:Src/main.c    ****   */
 312:Src/main.c    **** 
 313:Src/main.c    **** 
 314:Src/main.c    **** int usec_timer_counter = 0;
 315:Src/main.c    **** void usec_timer_action()
 316:Src/main.c    **** {
 417              		.loc 1 316 0
 418              		.cfi_startproc
ARM GAS  /tmp/ccJwcIby.s 			page 15


 317:Src/main.c    **** 	if(usec_timer_flag)
 419              		.loc 1 317 0
 420 0000 0B4B     		ldr	r3, .L17
 421 0002 1B68     		ldr	r3, [r3]
 422 0004 002B     		cmp	r3, #0
 423 0006 12D0     		beq	.L15
 318:Src/main.c    **** 	{
 319:Src/main.c    **** 		// drop flag
 320:Src/main.c    **** 		usec_timer_flag = 0;
 424              		.loc 1 320 0
 425 0008 0022     		mov	r2, #0
 426 000a 094B     		ldr	r3, .L17
 427 000c 1A60     		str	r2, [r3]
 321:Src/main.c    **** 		// increment counter
 322:Src/main.c    **** 		usec_timer_counter++;
 428              		.loc 1 322 0
 429 000e 094A     		ldr	r2, .L17+4
 430 0010 1368     		ldr	r3, [r2]
 431 0012 0133     		add	r3, r3, #1
 432 0014 1360     		str	r3, [r2]
 323:Src/main.c    **** 		// check counter value
 324:Src/main.c    **** 		if(usec_timer_counter > 1)
 433              		.loc 1 324 0
 434 0016 012B     		cmp	r3, #1
 435 0018 09DD     		ble	.L15
 325:Src/main.c    **** 		{
 326:Src/main.c    **** 			// toggle gpio
 327:Src/main.c    ****   			usec_gen_out_GPIO_Port->ODR ^= usec_gen_out_Pin;// toggle usec generator pin
 436              		.loc 1 327 0
 437 001a A022     		mov	r2, #160
 438 001c D205     		lsl	r2, r2, #23
 439 001e 5369     		ldr	r3, [r2, #20]
 440 0020 8021     		mov	r1, #128
 441 0022 4900     		lsl	r1, r1, #1
 442 0024 4B40     		eor	r3, r1
 443 0026 5361     		str	r3, [r2, #20]
 328:Src/main.c    **** 			usec_timer_counter = 0;
 444              		.loc 1 328 0
 445 0028 0022     		mov	r2, #0
 446 002a 024B     		ldr	r3, .L17+4
 447 002c 1A60     		str	r2, [r3]
 448              	.L15:
 329:Src/main.c    **** 
 330:Src/main.c    **** 		}
 331:Src/main.c    **** 	}
 332:Src/main.c    **** 
 333:Src/main.c    **** }
 449              		.loc 1 333 0
 450              		@ sp needed
 451 002e 7047     		bx	lr
 452              	.L18:
 453              		.align	2
 454              	.L17:
 455 0030 00000000 		.word	.LANCHOR8
 456 0034 00000000 		.word	.LANCHOR9
 457              		.cfi_endproc
 458              	.LFE39:
ARM GAS  /tmp/ccJwcIby.s 			page 16


 460              		.global	usec_timer_counter
 461              		.global	usart_buffer_index
 462              		.comm	usart_buffer,256,4
 463              		.comm	message,64,4
 464              		.global	usart_string_received_flag
 465              		.global	usart_rxne_flag
 466              		.global	chock_length_counter
 467              		.global	delay_counter
 468              		.global	discharge_counter
 469              		.global	negative_impulse_counter
 470              		.global	positive_impulse_counter
 471              		.global	charge_packet_counter
 472              		.global	odd_even
 473              		.global	automat_state
 474              		.global	usec_timer_flag
 475              		.global	DISCARGE_IMPULSE_LENGTH
 476              		.global	CHOCK_LENGTH
 477              		.global	DELAY_LENGTH
 478              		.global	NUMBER_OF_CHARGE_PULSES
 479              		.global	DELAY_1_MS
 480              		.comm	SSD1306_I2C_PORT,4,4
 481              		.section	.bss.usart_string_received_flag,"aw",%nobits
 482              		.align	2
 483              		.set	.LANCHOR1,. + 0
 486              	usart_string_received_flag:
 487 0000 00000000 		.space	4
 488              		.section	.data.CHOCK_LENGTH,"aw",%progbits
 489              		.align	2
 490              		.set	.LANCHOR5,. + 0
 493              	CHOCK_LENGTH:
 494 0000 0A000000 		.word	10
 495              		.section	.data.DISCARGE_IMPULSE_LENGTH,"aw",%progbits
 496              		.align	2
 497              		.set	.LANCHOR3,. + 0
 500              	DISCARGE_IMPULSE_LENGTH:
 501 0000 0B000000 		.word	11
 502              		.section	.bss.positive_impulse_counter,"aw",%nobits
 503              		.align	2
 506              	positive_impulse_counter:
 507 0000 00000000 		.space	4
 508              		.section	.bss.delay_counter,"aw",%nobits
 509              		.align	2
 512              	delay_counter:
 513 0000 00000000 		.space	4
 514              		.section	.bss.chock_length_counter,"aw",%nobits
 515              		.align	2
 516              		.set	.LANCHOR7,. + 0
 519              	chock_length_counter:
 520 0000 00000000 		.space	4
 521              		.section	.bss.usec_timer_counter,"aw",%nobits
 522              		.align	2
 523              		.set	.LANCHOR9,. + 0
 526              	usec_timer_counter:
 527 0000 00000000 		.space	4
 528              		.section	.bss.automat_state,"aw",%nobits
 529              		.align	2
 530              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccJwcIby.s 			page 17


 533              	automat_state:
 534 0000 00000000 		.space	4
 535              		.section	.rodata.str1.4,"aMS",%progbits,1
 536              		.align	2
 537              	.LC0:
 538 0000 5372632F 		.ascii	"Src/main.c\000"
 538      6D61696E 
 538      2E6300
 539 000b 00       		.space	1
 540              	.LC3:
 541 000c 56414C53 		.ascii	"VALS\000"
 541      00
 542 0011 000000   		.space	3
 543              	.LC8:
 544 0014 7400     		.ascii	"t\000"
 545 0016 0000     		.space	2
 546              	.LC13:
 547 0018 65253164 		.ascii	"e%1dc%2dk%3dl%4dd%2dn%4dp%5dm%3d\015\012\000"
 547      63253264 
 547      6B253364 
 547      6C253464 
 547      64253264 
 548              		.section	.bss.usart_rxne_flag,"aw",%nobits
 549              		.align	2
 552              	usart_rxne_flag:
 553 0000 00000000 		.space	4
 554              		.section	.bss.odd_even,"aw",%nobits
 555              		.align	2
 558              	odd_even:
 559 0000 00000000 		.space	4
 560              		.section	.bss.usart_buffer_index,"aw",%nobits
 561              		.align	2
 562              		.set	.LANCHOR6,. + 0
 565              	usart_buffer_index:
 566 0000 00000000 		.space	4
 567              		.section	.bss.discharge_counter,"aw",%nobits
 568              		.align	2
 571              	discharge_counter:
 572 0000 00000000 		.space	4
 573              		.section	.bss.charge_packet_counter,"aw",%nobits
 574              		.align	2
 577              	charge_packet_counter:
 578 0000 00000000 		.space	4
 579              		.section	.data.DELAY_1_MS,"aw",%progbits
 580              		.align	2
 583              	DELAY_1_MS:
 584 0000 32000000 		.word	50
 585              		.section	.bss.usec_timer_flag,"aw",%nobits
 586              		.align	2
 587              		.set	.LANCHOR8,. + 0
 590              	usec_timer_flag:
 591 0000 00000000 		.space	4
 592              		.section	.data.DELAY_LENGTH,"aw",%progbits
 593              		.align	2
 594              		.set	.LANCHOR4,. + 0
 597              	DELAY_LENGTH:
 598 0000 0B000000 		.word	11
ARM GAS  /tmp/ccJwcIby.s 			page 18


 599              		.section	.data.NUMBER_OF_CHARGE_PULSES,"aw",%progbits
 600              		.align	2
 601              		.set	.LANCHOR2,. + 0
 604              	NUMBER_OF_CHARGE_PULSES:
 605 0000 08000000 		.word	8
 606              		.section	.bss.negative_impulse_counter,"aw",%nobits
 607              		.align	2
 610              	negative_impulse_counter:
 611 0000 00000000 		.space	4
 612              		.text
 613              	.Letext0:
 614              		.file 2 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 615              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 616              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 617              		.file 5 "Drivers/CMSIS/Include/core_cm0plus.h"
 618              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 619              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 620              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 621              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 622              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 623              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 624              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 625              		.file 13 "Inc/fonts.h"
 626              		.file 14 "Inc/ssd1306.h"
 627              		.file 15 "Inc/i2c.h"
 628              		.file 16 "Inc/tim.h"
 629              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 630              		.file 18 "/usr/include/newlib/stdio.h"
 631              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 632              		.file 20 "Inc/gpio.h"
 633              		.file 21 "Inc/spi.h"
 634              		.file 22 "Inc/usart.h"
 635              		.file 23 "Inc/adc.h"
ARM GAS  /tmp/ccJwcIby.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccJwcIby.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccJwcIby.s:23     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccJwcIby.s:37     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccJwcIby.s:42     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccJwcIby.s:170    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccJwcIby.s:178    .text.main:0000000000000000 $t
     /tmp/ccJwcIby.s:183    .text.main:0000000000000000 main
     /tmp/ccJwcIby.s:386    .text.main:0000000000000120 $d
                            *COM*:0000000000000040 message
                            *COM*:0000000000000100 usart_buffer
     /tmp/ccJwcIby.s:410    .text.usec_timer_action:0000000000000000 $t
     /tmp/ccJwcIby.s:415    .text.usec_timer_action:0000000000000000 usec_timer_action
     /tmp/ccJwcIby.s:455    .text.usec_timer_action:0000000000000030 $d
     /tmp/ccJwcIby.s:526    .bss.usec_timer_counter:0000000000000000 usec_timer_counter
     /tmp/ccJwcIby.s:565    .bss.usart_buffer_index:0000000000000000 usart_buffer_index
     /tmp/ccJwcIby.s:486    .bss.usart_string_received_flag:0000000000000000 usart_string_received_flag
     /tmp/ccJwcIby.s:552    .bss.usart_rxne_flag:0000000000000000 usart_rxne_flag
     /tmp/ccJwcIby.s:519    .bss.chock_length_counter:0000000000000000 chock_length_counter
     /tmp/ccJwcIby.s:512    .bss.delay_counter:0000000000000000 delay_counter
     /tmp/ccJwcIby.s:571    .bss.discharge_counter:0000000000000000 discharge_counter
     /tmp/ccJwcIby.s:610    .bss.negative_impulse_counter:0000000000000000 negative_impulse_counter
     /tmp/ccJwcIby.s:506    .bss.positive_impulse_counter:0000000000000000 positive_impulse_counter
     /tmp/ccJwcIby.s:577    .bss.charge_packet_counter:0000000000000000 charge_packet_counter
     /tmp/ccJwcIby.s:558    .bss.odd_even:0000000000000000 odd_even
     /tmp/ccJwcIby.s:533    .bss.automat_state:0000000000000000 automat_state
     /tmp/ccJwcIby.s:590    .bss.usec_timer_flag:0000000000000000 usec_timer_flag
     /tmp/ccJwcIby.s:500    .data.DISCARGE_IMPULSE_LENGTH:0000000000000000 DISCARGE_IMPULSE_LENGTH
     /tmp/ccJwcIby.s:493    .data.CHOCK_LENGTH:0000000000000000 CHOCK_LENGTH
     /tmp/ccJwcIby.s:597    .data.DELAY_LENGTH:0000000000000000 DELAY_LENGTH
     /tmp/ccJwcIby.s:604    .data.NUMBER_OF_CHARGE_PULSES:0000000000000000 NUMBER_OF_CHARGE_PULSES
     /tmp/ccJwcIby.s:583    .data.DELAY_1_MS:0000000000000000 DELAY_1_MS
                            *COM*:0000000000000004 SSD1306_I2C_PORT
     /tmp/ccJwcIby.s:482    .bss.usart_string_received_flag:0000000000000000 $d
     /tmp/ccJwcIby.s:489    .data.CHOCK_LENGTH:0000000000000000 $d
     /tmp/ccJwcIby.s:496    .data.DISCARGE_IMPULSE_LENGTH:0000000000000000 $d
     /tmp/ccJwcIby.s:503    .bss.positive_impulse_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:509    .bss.delay_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:515    .bss.chock_length_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:522    .bss.usec_timer_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:529    .bss.automat_state:0000000000000000 $d
     /tmp/ccJwcIby.s:536    .rodata.str1.4:0000000000000000 $d
     /tmp/ccJwcIby.s:549    .bss.usart_rxne_flag:0000000000000000 $d
     /tmp/ccJwcIby.s:555    .bss.odd_even:0000000000000000 $d
     /tmp/ccJwcIby.s:561    .bss.usart_buffer_index:0000000000000000 $d
     /tmp/ccJwcIby.s:568    .bss.discharge_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:574    .bss.charge_packet_counter:0000000000000000 $d
     /tmp/ccJwcIby.s:580    .data.DELAY_1_MS:0000000000000000 $d
     /tmp/ccJwcIby.s:586    .bss.usec_timer_flag:0000000000000000 $d
     /tmp/ccJwcIby.s:593    .data.DELAY_LENGTH:0000000000000000 $d
     /tmp/ccJwcIby.s:600    .data.NUMBER_OF_CHARGE_PULSES:0000000000000000 $d
     /tmp/ccJwcIby.s:607    .bss.negative_impulse_counter:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
ARM GAS  /tmp/ccJwcIby.s 			page 20


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_idiv
HAL_Init
MX_GPIO_Init
MX_TIM2_Init
MX_TIM6_Init
MX_TIM22_Init
MX_SPI2_Init
MX_USART1_UART_Init
MX_I2C1_Init
MX_ADC_Init
ssd1306_set_i2c_port
ssd1306_Init
HAL_Delay
ssd1306_Fill
ssd1306_UpdateScreen
ssd1306_SetCursor
ssd1306_WriteString
HAL_GPIO_WritePin
MX_TIM21_Init
HAL_TIM_Base_Start
memcpy
sscanf
hi2c1
Font_16x26
htim21
